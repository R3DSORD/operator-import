#!/usr/local/bin/ansible-playbook --inventory=inventory

- name: ' Operators '
  hosts: localhost
  vars_files:
    - vars/global.yml

  tasks:
    - name: Create auth directory
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /root/.docker
        - /root/.kube

    - name: Create auth file
      template:
        src: templates/auth.json
        dest: /root/.docker/auth.json

    - name: Create auth file
      template:
        src: files/kubeconfig
        dest: /root/.kube/config

    - name: build Redhat catalog
      shell: oc adm catalog build \
        --appregistry-org redhat-operators \
        --from={{ redhat_operators }} \
        --filter-by-os="linux/amd64" \
        --to={{ local_registry }}/{{ local_redhat_catalog }} \
        -a {{ quay_auth }} \
        --insecure
      when: Redhat

    - name: build community catalog
      shell: oc adm catalog build \
        --appregistry-org community-operators \
        --from={{ community_operators }} \
        --filter-by-os="linux/amd64" \
        --to={{ local_registry }}/{{ local_community_catalog }} \
        -a {{ quay_auth }} \
        --insecure
      when: community

    - name: Mirror Redhat catalog
      shell: oc adm catalog mirror \
        {{ local_registry }}/{{ local_redhat_catalog }} \
        {{ local_registry }} \
        -a {{ quay_auth }} \
        --insecure
      when: Redhat

    - name: Mirror community catalog
      shell: oc adm catalog mirror \
        {{ local_registry }}/{{ local_community_catalog }} \
        {{ local_registry }} \
        -a {{ quay_auth }} \
        --insecure
      when: community

    - name: Generate community catalog
      template:
        src: files/community-catalog-resource.j2
        dest: community-operators-manifests/community-catalog-resource.yaml
      when: community

    - name: Generate Redhat catalog
      template:
        src: files/rh-catalog-resource.j2
        dest: redhat-operators-manifests/rh-catalog-resource.yaml
      when: Redhat

    - name: Patch operator hub
      shell:
        cmd: |
          oc patch OperatorHub cluster --type json -p '[{"op": "add", "path": "/spec/disableAllDefaultSources", "value": true}]'

    - name: Create community resource catalog
      shell: oc apply -f community-operators-manifests/community-catalog-resource.yaml
      when: community

    - name: Create Redhat resource catalog
      shell: oc apply -f redhat-operators-manifests/rh-catalog-resource.yaml
      when: Redhat

        # TODO: Uncomment when we've done more testing on these
        #    - name: Create community image resources
        #      shell: oc apply -f community-operators-manifests/imageContentSourcePolicy.yaml
        #      when: community
        #
        #    - name: Create redhat image resources
        #      shell: oc apply -f redhat-operators-manifests/imageContentSourcePolicy.yaml
        #      when: Redhat


    - name: Encode Registry.conf
      set_fact:
        encoded_registry_conf: "{{ lookup('template', 'templates/registry.conf.j2') | b64encode }}"

    - name: Apply MachineConfig
      k8s:
        definition: |-
          apiVersion: machineconfiguration.openshift.io/v1
          kind: MachineConfig
          metadata:
            name: 99-worker-z-container-registry-conf
            labels:
              machineconfiguration.openshift.io/role: worker
          spec:
            config:
              ignition:
                version: 2.2.0
              storage:
                files:
                  - contents:
                      source: >-
                        data:text/plain;charset=utf-8;base64,{{ encoded_registry_conf }}
                      verification: {}
                    filesystem: root
                    mode: 420
                    path: /etc/containers/registries.conf
















